generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DiffEnum {
  ONE
  TWO
  THREE
}

enum CampusEnum {
  WestBank
  EastBankCore
  EastBankOuter
  Dinkytown
  StPaul
}

model Photo {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  imageId String 
  buildingName String 
  description String?
  latitude Float
  longitude Float
  diffRating DiffEnum?
  campus CampusEnum?
  indoors Boolean?
  isApproved Boolean @default(true)
  uploader User @relation(fields: [uploaderId], references: [id])
  uploaderId Int
  guesses Guess[]
}

model User {
  id       Int     @id @default(autoincrement()) 
  name     String
  email    String  @unique
  photos   Photo[]
}

model GameState {
  id Int @id @default(autoincrement()) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  guesses Guess[]
  round Int @default(1)
  points Int @default(0)
  started Boolean @default(false)
  complete Boolean @default(false)
}

model Guess {
  id Int @id @default(autoincrement()) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gameStateId Int
  gameState GameState @relation(fields: [gameStateId], references: [id])
  photoId Int
  photo Photo @relation(fields: [photoId], references: [id])
  guessComplete Boolean @default(false)
  latitude Float?
  longitude Float?
  distance Float?
  points Float?
}
